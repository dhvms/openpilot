#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_35 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                       Code generated with SymPy 1.12                       *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_9025523174858268363) {
   out_9025523174858268363[0] = 0;
   out_9025523174858268363[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_9025523174858268363[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_9025523174858268363[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_9025523174858268363[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_9025523174858268363[5] = -sin(in_vec[1]);
   out_9025523174858268363[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_9025523174858268363[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_9025523174858268363[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_9025523174858268363[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_9025523174858268363[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_9025523174858268363[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_9025523174858268363[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_9025523174858268363[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_9025523174858268363[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_9025523174858268363[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_9025523174858268363[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_9025523174858268363[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_3634450284494703329) {
   out_3634450284494703329[0] = delta_x[0] + nom_x[0];
   out_3634450284494703329[1] = delta_x[1] + nom_x[1];
   out_3634450284494703329[2] = delta_x[2] + nom_x[2];
   out_3634450284494703329[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_3634450284494703329[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_3634450284494703329[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_3634450284494703329[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_3634450284494703329[7] = delta_x[6] + nom_x[7];
   out_3634450284494703329[8] = delta_x[7] + nom_x[8];
   out_3634450284494703329[9] = delta_x[8] + nom_x[9];
   out_3634450284494703329[10] = delta_x[9] + nom_x[10];
   out_3634450284494703329[11] = delta_x[10] + nom_x[11];
   out_3634450284494703329[12] = delta_x[11] + nom_x[12];
   out_3634450284494703329[13] = delta_x[12] + nom_x[13];
   out_3634450284494703329[14] = delta_x[13] + nom_x[14];
   out_3634450284494703329[15] = delta_x[14] + nom_x[15];
   out_3634450284494703329[16] = delta_x[15] + nom_x[16];
   out_3634450284494703329[17] = delta_x[16] + nom_x[17];
   out_3634450284494703329[18] = delta_x[17] + nom_x[18];
   out_3634450284494703329[19] = delta_x[18] + nom_x[19];
   out_3634450284494703329[20] = delta_x[19] + nom_x[20];
   out_3634450284494703329[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_3581389455580693311) {
   out_3581389455580693311[0] = -nom_x[0] + true_x[0];
   out_3581389455580693311[1] = -nom_x[1] + true_x[1];
   out_3581389455580693311[2] = -nom_x[2] + true_x[2];
   out_3581389455580693311[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_3581389455580693311[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_3581389455580693311[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_3581389455580693311[6] = -nom_x[7] + true_x[7];
   out_3581389455580693311[7] = -nom_x[8] + true_x[8];
   out_3581389455580693311[8] = -nom_x[9] + true_x[9];
   out_3581389455580693311[9] = -nom_x[10] + true_x[10];
   out_3581389455580693311[10] = -nom_x[11] + true_x[11];
   out_3581389455580693311[11] = -nom_x[12] + true_x[12];
   out_3581389455580693311[12] = -nom_x[13] + true_x[13];
   out_3581389455580693311[13] = -nom_x[14] + true_x[14];
   out_3581389455580693311[14] = -nom_x[15] + true_x[15];
   out_3581389455580693311[15] = -nom_x[16] + true_x[16];
   out_3581389455580693311[16] = -nom_x[17] + true_x[17];
   out_3581389455580693311[17] = -nom_x[18] + true_x[18];
   out_3581389455580693311[18] = -nom_x[19] + true_x[19];
   out_3581389455580693311[19] = -nom_x[20] + true_x[20];
   out_3581389455580693311[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_6267270226691599381) {
   out_6267270226691599381[0] = 1.0;
   out_6267270226691599381[1] = 0;
   out_6267270226691599381[2] = 0;
   out_6267270226691599381[3] = 0;
   out_6267270226691599381[4] = 0;
   out_6267270226691599381[5] = 0;
   out_6267270226691599381[6] = 0;
   out_6267270226691599381[7] = 0;
   out_6267270226691599381[8] = 0;
   out_6267270226691599381[9] = 0;
   out_6267270226691599381[10] = 0;
   out_6267270226691599381[11] = 0;
   out_6267270226691599381[12] = 0;
   out_6267270226691599381[13] = 0;
   out_6267270226691599381[14] = 0;
   out_6267270226691599381[15] = 0;
   out_6267270226691599381[16] = 0;
   out_6267270226691599381[17] = 0;
   out_6267270226691599381[18] = 0;
   out_6267270226691599381[19] = 0;
   out_6267270226691599381[20] = 0;
   out_6267270226691599381[21] = 0;
   out_6267270226691599381[22] = 1.0;
   out_6267270226691599381[23] = 0;
   out_6267270226691599381[24] = 0;
   out_6267270226691599381[25] = 0;
   out_6267270226691599381[26] = 0;
   out_6267270226691599381[27] = 0;
   out_6267270226691599381[28] = 0;
   out_6267270226691599381[29] = 0;
   out_6267270226691599381[30] = 0;
   out_6267270226691599381[31] = 0;
   out_6267270226691599381[32] = 0;
   out_6267270226691599381[33] = 0;
   out_6267270226691599381[34] = 0;
   out_6267270226691599381[35] = 0;
   out_6267270226691599381[36] = 0;
   out_6267270226691599381[37] = 0;
   out_6267270226691599381[38] = 0;
   out_6267270226691599381[39] = 0;
   out_6267270226691599381[40] = 0;
   out_6267270226691599381[41] = 0;
   out_6267270226691599381[42] = 0;
   out_6267270226691599381[43] = 0;
   out_6267270226691599381[44] = 1.0;
   out_6267270226691599381[45] = 0;
   out_6267270226691599381[46] = 0;
   out_6267270226691599381[47] = 0;
   out_6267270226691599381[48] = 0;
   out_6267270226691599381[49] = 0;
   out_6267270226691599381[50] = 0;
   out_6267270226691599381[51] = 0;
   out_6267270226691599381[52] = 0;
   out_6267270226691599381[53] = 0;
   out_6267270226691599381[54] = 0;
   out_6267270226691599381[55] = 0;
   out_6267270226691599381[56] = 0;
   out_6267270226691599381[57] = 0;
   out_6267270226691599381[58] = 0;
   out_6267270226691599381[59] = 0;
   out_6267270226691599381[60] = 0;
   out_6267270226691599381[61] = 0;
   out_6267270226691599381[62] = 0;
   out_6267270226691599381[63] = 0;
   out_6267270226691599381[64] = 0;
   out_6267270226691599381[65] = 0;
   out_6267270226691599381[66] = -0.5*state[4];
   out_6267270226691599381[67] = -0.5*state[5];
   out_6267270226691599381[68] = -0.5*state[6];
   out_6267270226691599381[69] = 0;
   out_6267270226691599381[70] = 0;
   out_6267270226691599381[71] = 0;
   out_6267270226691599381[72] = 0;
   out_6267270226691599381[73] = 0;
   out_6267270226691599381[74] = 0;
   out_6267270226691599381[75] = 0;
   out_6267270226691599381[76] = 0;
   out_6267270226691599381[77] = 0;
   out_6267270226691599381[78] = 0;
   out_6267270226691599381[79] = 0;
   out_6267270226691599381[80] = 0;
   out_6267270226691599381[81] = 0;
   out_6267270226691599381[82] = 0;
   out_6267270226691599381[83] = 0;
   out_6267270226691599381[84] = 0;
   out_6267270226691599381[85] = 0;
   out_6267270226691599381[86] = 0;
   out_6267270226691599381[87] = 0.5*state[3];
   out_6267270226691599381[88] = 0.5*state[6];
   out_6267270226691599381[89] = -0.5*state[5];
   out_6267270226691599381[90] = 0;
   out_6267270226691599381[91] = 0;
   out_6267270226691599381[92] = 0;
   out_6267270226691599381[93] = 0;
   out_6267270226691599381[94] = 0;
   out_6267270226691599381[95] = 0;
   out_6267270226691599381[96] = 0;
   out_6267270226691599381[97] = 0;
   out_6267270226691599381[98] = 0;
   out_6267270226691599381[99] = 0;
   out_6267270226691599381[100] = 0;
   out_6267270226691599381[101] = 0;
   out_6267270226691599381[102] = 0;
   out_6267270226691599381[103] = 0;
   out_6267270226691599381[104] = 0;
   out_6267270226691599381[105] = 0;
   out_6267270226691599381[106] = 0;
   out_6267270226691599381[107] = 0;
   out_6267270226691599381[108] = -0.5*state[6];
   out_6267270226691599381[109] = 0.5*state[3];
   out_6267270226691599381[110] = 0.5*state[4];
   out_6267270226691599381[111] = 0;
   out_6267270226691599381[112] = 0;
   out_6267270226691599381[113] = 0;
   out_6267270226691599381[114] = 0;
   out_6267270226691599381[115] = 0;
   out_6267270226691599381[116] = 0;
   out_6267270226691599381[117] = 0;
   out_6267270226691599381[118] = 0;
   out_6267270226691599381[119] = 0;
   out_6267270226691599381[120] = 0;
   out_6267270226691599381[121] = 0;
   out_6267270226691599381[122] = 0;
   out_6267270226691599381[123] = 0;
   out_6267270226691599381[124] = 0;
   out_6267270226691599381[125] = 0;
   out_6267270226691599381[126] = 0;
   out_6267270226691599381[127] = 0;
   out_6267270226691599381[128] = 0;
   out_6267270226691599381[129] = 0.5*state[5];
   out_6267270226691599381[130] = -0.5*state[4];
   out_6267270226691599381[131] = 0.5*state[3];
   out_6267270226691599381[132] = 0;
   out_6267270226691599381[133] = 0;
   out_6267270226691599381[134] = 0;
   out_6267270226691599381[135] = 0;
   out_6267270226691599381[136] = 0;
   out_6267270226691599381[137] = 0;
   out_6267270226691599381[138] = 0;
   out_6267270226691599381[139] = 0;
   out_6267270226691599381[140] = 0;
   out_6267270226691599381[141] = 0;
   out_6267270226691599381[142] = 0;
   out_6267270226691599381[143] = 0;
   out_6267270226691599381[144] = 0;
   out_6267270226691599381[145] = 0;
   out_6267270226691599381[146] = 0;
   out_6267270226691599381[147] = 0;
   out_6267270226691599381[148] = 0;
   out_6267270226691599381[149] = 0;
   out_6267270226691599381[150] = 0;
   out_6267270226691599381[151] = 0;
   out_6267270226691599381[152] = 0;
   out_6267270226691599381[153] = 1.0;
   out_6267270226691599381[154] = 0;
   out_6267270226691599381[155] = 0;
   out_6267270226691599381[156] = 0;
   out_6267270226691599381[157] = 0;
   out_6267270226691599381[158] = 0;
   out_6267270226691599381[159] = 0;
   out_6267270226691599381[160] = 0;
   out_6267270226691599381[161] = 0;
   out_6267270226691599381[162] = 0;
   out_6267270226691599381[163] = 0;
   out_6267270226691599381[164] = 0;
   out_6267270226691599381[165] = 0;
   out_6267270226691599381[166] = 0;
   out_6267270226691599381[167] = 0;
   out_6267270226691599381[168] = 0;
   out_6267270226691599381[169] = 0;
   out_6267270226691599381[170] = 0;
   out_6267270226691599381[171] = 0;
   out_6267270226691599381[172] = 0;
   out_6267270226691599381[173] = 0;
   out_6267270226691599381[174] = 0;
   out_6267270226691599381[175] = 1.0;
   out_6267270226691599381[176] = 0;
   out_6267270226691599381[177] = 0;
   out_6267270226691599381[178] = 0;
   out_6267270226691599381[179] = 0;
   out_6267270226691599381[180] = 0;
   out_6267270226691599381[181] = 0;
   out_6267270226691599381[182] = 0;
   out_6267270226691599381[183] = 0;
   out_6267270226691599381[184] = 0;
   out_6267270226691599381[185] = 0;
   out_6267270226691599381[186] = 0;
   out_6267270226691599381[187] = 0;
   out_6267270226691599381[188] = 0;
   out_6267270226691599381[189] = 0;
   out_6267270226691599381[190] = 0;
   out_6267270226691599381[191] = 0;
   out_6267270226691599381[192] = 0;
   out_6267270226691599381[193] = 0;
   out_6267270226691599381[194] = 0;
   out_6267270226691599381[195] = 0;
   out_6267270226691599381[196] = 0;
   out_6267270226691599381[197] = 1.0;
   out_6267270226691599381[198] = 0;
   out_6267270226691599381[199] = 0;
   out_6267270226691599381[200] = 0;
   out_6267270226691599381[201] = 0;
   out_6267270226691599381[202] = 0;
   out_6267270226691599381[203] = 0;
   out_6267270226691599381[204] = 0;
   out_6267270226691599381[205] = 0;
   out_6267270226691599381[206] = 0;
   out_6267270226691599381[207] = 0;
   out_6267270226691599381[208] = 0;
   out_6267270226691599381[209] = 0;
   out_6267270226691599381[210] = 0;
   out_6267270226691599381[211] = 0;
   out_6267270226691599381[212] = 0;
   out_6267270226691599381[213] = 0;
   out_6267270226691599381[214] = 0;
   out_6267270226691599381[215] = 0;
   out_6267270226691599381[216] = 0;
   out_6267270226691599381[217] = 0;
   out_6267270226691599381[218] = 0;
   out_6267270226691599381[219] = 1.0;
   out_6267270226691599381[220] = 0;
   out_6267270226691599381[221] = 0;
   out_6267270226691599381[222] = 0;
   out_6267270226691599381[223] = 0;
   out_6267270226691599381[224] = 0;
   out_6267270226691599381[225] = 0;
   out_6267270226691599381[226] = 0;
   out_6267270226691599381[227] = 0;
   out_6267270226691599381[228] = 0;
   out_6267270226691599381[229] = 0;
   out_6267270226691599381[230] = 0;
   out_6267270226691599381[231] = 0;
   out_6267270226691599381[232] = 0;
   out_6267270226691599381[233] = 0;
   out_6267270226691599381[234] = 0;
   out_6267270226691599381[235] = 0;
   out_6267270226691599381[236] = 0;
   out_6267270226691599381[237] = 0;
   out_6267270226691599381[238] = 0;
   out_6267270226691599381[239] = 0;
   out_6267270226691599381[240] = 0;
   out_6267270226691599381[241] = 1.0;
   out_6267270226691599381[242] = 0;
   out_6267270226691599381[243] = 0;
   out_6267270226691599381[244] = 0;
   out_6267270226691599381[245] = 0;
   out_6267270226691599381[246] = 0;
   out_6267270226691599381[247] = 0;
   out_6267270226691599381[248] = 0;
   out_6267270226691599381[249] = 0;
   out_6267270226691599381[250] = 0;
   out_6267270226691599381[251] = 0;
   out_6267270226691599381[252] = 0;
   out_6267270226691599381[253] = 0;
   out_6267270226691599381[254] = 0;
   out_6267270226691599381[255] = 0;
   out_6267270226691599381[256] = 0;
   out_6267270226691599381[257] = 0;
   out_6267270226691599381[258] = 0;
   out_6267270226691599381[259] = 0;
   out_6267270226691599381[260] = 0;
   out_6267270226691599381[261] = 0;
   out_6267270226691599381[262] = 0;
   out_6267270226691599381[263] = 1.0;
   out_6267270226691599381[264] = 0;
   out_6267270226691599381[265] = 0;
   out_6267270226691599381[266] = 0;
   out_6267270226691599381[267] = 0;
   out_6267270226691599381[268] = 0;
   out_6267270226691599381[269] = 0;
   out_6267270226691599381[270] = 0;
   out_6267270226691599381[271] = 0;
   out_6267270226691599381[272] = 0;
   out_6267270226691599381[273] = 0;
   out_6267270226691599381[274] = 0;
   out_6267270226691599381[275] = 0;
   out_6267270226691599381[276] = 0;
   out_6267270226691599381[277] = 0;
   out_6267270226691599381[278] = 0;
   out_6267270226691599381[279] = 0;
   out_6267270226691599381[280] = 0;
   out_6267270226691599381[281] = 0;
   out_6267270226691599381[282] = 0;
   out_6267270226691599381[283] = 0;
   out_6267270226691599381[284] = 0;
   out_6267270226691599381[285] = 1.0;
   out_6267270226691599381[286] = 0;
   out_6267270226691599381[287] = 0;
   out_6267270226691599381[288] = 0;
   out_6267270226691599381[289] = 0;
   out_6267270226691599381[290] = 0;
   out_6267270226691599381[291] = 0;
   out_6267270226691599381[292] = 0;
   out_6267270226691599381[293] = 0;
   out_6267270226691599381[294] = 0;
   out_6267270226691599381[295] = 0;
   out_6267270226691599381[296] = 0;
   out_6267270226691599381[297] = 0;
   out_6267270226691599381[298] = 0;
   out_6267270226691599381[299] = 0;
   out_6267270226691599381[300] = 0;
   out_6267270226691599381[301] = 0;
   out_6267270226691599381[302] = 0;
   out_6267270226691599381[303] = 0;
   out_6267270226691599381[304] = 0;
   out_6267270226691599381[305] = 0;
   out_6267270226691599381[306] = 0;
   out_6267270226691599381[307] = 1.0;
   out_6267270226691599381[308] = 0;
   out_6267270226691599381[309] = 0;
   out_6267270226691599381[310] = 0;
   out_6267270226691599381[311] = 0;
   out_6267270226691599381[312] = 0;
   out_6267270226691599381[313] = 0;
   out_6267270226691599381[314] = 0;
   out_6267270226691599381[315] = 0;
   out_6267270226691599381[316] = 0;
   out_6267270226691599381[317] = 0;
   out_6267270226691599381[318] = 0;
   out_6267270226691599381[319] = 0;
   out_6267270226691599381[320] = 0;
   out_6267270226691599381[321] = 0;
   out_6267270226691599381[322] = 0;
   out_6267270226691599381[323] = 0;
   out_6267270226691599381[324] = 0;
   out_6267270226691599381[325] = 0;
   out_6267270226691599381[326] = 0;
   out_6267270226691599381[327] = 0;
   out_6267270226691599381[328] = 0;
   out_6267270226691599381[329] = 1.0;
   out_6267270226691599381[330] = 0;
   out_6267270226691599381[331] = 0;
   out_6267270226691599381[332] = 0;
   out_6267270226691599381[333] = 0;
   out_6267270226691599381[334] = 0;
   out_6267270226691599381[335] = 0;
   out_6267270226691599381[336] = 0;
   out_6267270226691599381[337] = 0;
   out_6267270226691599381[338] = 0;
   out_6267270226691599381[339] = 0;
   out_6267270226691599381[340] = 0;
   out_6267270226691599381[341] = 0;
   out_6267270226691599381[342] = 0;
   out_6267270226691599381[343] = 0;
   out_6267270226691599381[344] = 0;
   out_6267270226691599381[345] = 0;
   out_6267270226691599381[346] = 0;
   out_6267270226691599381[347] = 0;
   out_6267270226691599381[348] = 0;
   out_6267270226691599381[349] = 0;
   out_6267270226691599381[350] = 0;
   out_6267270226691599381[351] = 1.0;
   out_6267270226691599381[352] = 0;
   out_6267270226691599381[353] = 0;
   out_6267270226691599381[354] = 0;
   out_6267270226691599381[355] = 0;
   out_6267270226691599381[356] = 0;
   out_6267270226691599381[357] = 0;
   out_6267270226691599381[358] = 0;
   out_6267270226691599381[359] = 0;
   out_6267270226691599381[360] = 0;
   out_6267270226691599381[361] = 0;
   out_6267270226691599381[362] = 0;
   out_6267270226691599381[363] = 0;
   out_6267270226691599381[364] = 0;
   out_6267270226691599381[365] = 0;
   out_6267270226691599381[366] = 0;
   out_6267270226691599381[367] = 0;
   out_6267270226691599381[368] = 0;
   out_6267270226691599381[369] = 0;
   out_6267270226691599381[370] = 0;
   out_6267270226691599381[371] = 0;
   out_6267270226691599381[372] = 0;
   out_6267270226691599381[373] = 1.0;
   out_6267270226691599381[374] = 0;
   out_6267270226691599381[375] = 0;
   out_6267270226691599381[376] = 0;
   out_6267270226691599381[377] = 0;
   out_6267270226691599381[378] = 0;
   out_6267270226691599381[379] = 0;
   out_6267270226691599381[380] = 0;
   out_6267270226691599381[381] = 0;
   out_6267270226691599381[382] = 0;
   out_6267270226691599381[383] = 0;
   out_6267270226691599381[384] = 0;
   out_6267270226691599381[385] = 0;
   out_6267270226691599381[386] = 0;
   out_6267270226691599381[387] = 0;
   out_6267270226691599381[388] = 0;
   out_6267270226691599381[389] = 0;
   out_6267270226691599381[390] = 0;
   out_6267270226691599381[391] = 0;
   out_6267270226691599381[392] = 0;
   out_6267270226691599381[393] = 0;
   out_6267270226691599381[394] = 0;
   out_6267270226691599381[395] = 1.0;
   out_6267270226691599381[396] = 0;
   out_6267270226691599381[397] = 0;
   out_6267270226691599381[398] = 0;
   out_6267270226691599381[399] = 0;
   out_6267270226691599381[400] = 0;
   out_6267270226691599381[401] = 0;
   out_6267270226691599381[402] = 0;
   out_6267270226691599381[403] = 0;
   out_6267270226691599381[404] = 0;
   out_6267270226691599381[405] = 0;
   out_6267270226691599381[406] = 0;
   out_6267270226691599381[407] = 0;
   out_6267270226691599381[408] = 0;
   out_6267270226691599381[409] = 0;
   out_6267270226691599381[410] = 0;
   out_6267270226691599381[411] = 0;
   out_6267270226691599381[412] = 0;
   out_6267270226691599381[413] = 0;
   out_6267270226691599381[414] = 0;
   out_6267270226691599381[415] = 0;
   out_6267270226691599381[416] = 0;
   out_6267270226691599381[417] = 1.0;
   out_6267270226691599381[418] = 0;
   out_6267270226691599381[419] = 0;
   out_6267270226691599381[420] = 0;
   out_6267270226691599381[421] = 0;
   out_6267270226691599381[422] = 0;
   out_6267270226691599381[423] = 0;
   out_6267270226691599381[424] = 0;
   out_6267270226691599381[425] = 0;
   out_6267270226691599381[426] = 0;
   out_6267270226691599381[427] = 0;
   out_6267270226691599381[428] = 0;
   out_6267270226691599381[429] = 0;
   out_6267270226691599381[430] = 0;
   out_6267270226691599381[431] = 0;
   out_6267270226691599381[432] = 0;
   out_6267270226691599381[433] = 0;
   out_6267270226691599381[434] = 0;
   out_6267270226691599381[435] = 0;
   out_6267270226691599381[436] = 0;
   out_6267270226691599381[437] = 0;
   out_6267270226691599381[438] = 0;
   out_6267270226691599381[439] = 1.0;
   out_6267270226691599381[440] = 0;
   out_6267270226691599381[441] = 0;
   out_6267270226691599381[442] = 0;
   out_6267270226691599381[443] = 0;
   out_6267270226691599381[444] = 0;
   out_6267270226691599381[445] = 0;
   out_6267270226691599381[446] = 0;
   out_6267270226691599381[447] = 0;
   out_6267270226691599381[448] = 0;
   out_6267270226691599381[449] = 0;
   out_6267270226691599381[450] = 0;
   out_6267270226691599381[451] = 0;
   out_6267270226691599381[452] = 0;
   out_6267270226691599381[453] = 0;
   out_6267270226691599381[454] = 0;
   out_6267270226691599381[455] = 0;
   out_6267270226691599381[456] = 0;
   out_6267270226691599381[457] = 0;
   out_6267270226691599381[458] = 0;
   out_6267270226691599381[459] = 0;
   out_6267270226691599381[460] = 0;
   out_6267270226691599381[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_1967718795723466617) {
   out_1967718795723466617[0] = dt*state[7] + state[0];
   out_1967718795723466617[1] = dt*state[8] + state[1];
   out_1967718795723466617[2] = dt*state[9] + state[2];
   out_1967718795723466617[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_1967718795723466617[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_1967718795723466617[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_1967718795723466617[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_1967718795723466617[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_1967718795723466617[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_1967718795723466617[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_1967718795723466617[10] = state[10];
   out_1967718795723466617[11] = state[11];
   out_1967718795723466617[12] = state[12];
   out_1967718795723466617[13] = state[13];
   out_1967718795723466617[14] = state[14];
   out_1967718795723466617[15] = state[15];
   out_1967718795723466617[16] = state[16];
   out_1967718795723466617[17] = state[17];
   out_1967718795723466617[18] = state[18];
   out_1967718795723466617[19] = state[19];
   out_1967718795723466617[20] = state[20];
   out_1967718795723466617[21] = state[21];
}
void F_fun(double *state, double dt, double *out_8172511356407623782) {
   out_8172511356407623782[0] = 1;
   out_8172511356407623782[1] = 0;
   out_8172511356407623782[2] = 0;
   out_8172511356407623782[3] = 0;
   out_8172511356407623782[4] = 0;
   out_8172511356407623782[5] = 0;
   out_8172511356407623782[6] = dt;
   out_8172511356407623782[7] = 0;
   out_8172511356407623782[8] = 0;
   out_8172511356407623782[9] = 0;
   out_8172511356407623782[10] = 0;
   out_8172511356407623782[11] = 0;
   out_8172511356407623782[12] = 0;
   out_8172511356407623782[13] = 0;
   out_8172511356407623782[14] = 0;
   out_8172511356407623782[15] = 0;
   out_8172511356407623782[16] = 0;
   out_8172511356407623782[17] = 0;
   out_8172511356407623782[18] = 0;
   out_8172511356407623782[19] = 0;
   out_8172511356407623782[20] = 0;
   out_8172511356407623782[21] = 0;
   out_8172511356407623782[22] = 1;
   out_8172511356407623782[23] = 0;
   out_8172511356407623782[24] = 0;
   out_8172511356407623782[25] = 0;
   out_8172511356407623782[26] = 0;
   out_8172511356407623782[27] = 0;
   out_8172511356407623782[28] = dt;
   out_8172511356407623782[29] = 0;
   out_8172511356407623782[30] = 0;
   out_8172511356407623782[31] = 0;
   out_8172511356407623782[32] = 0;
   out_8172511356407623782[33] = 0;
   out_8172511356407623782[34] = 0;
   out_8172511356407623782[35] = 0;
   out_8172511356407623782[36] = 0;
   out_8172511356407623782[37] = 0;
   out_8172511356407623782[38] = 0;
   out_8172511356407623782[39] = 0;
   out_8172511356407623782[40] = 0;
   out_8172511356407623782[41] = 0;
   out_8172511356407623782[42] = 0;
   out_8172511356407623782[43] = 0;
   out_8172511356407623782[44] = 1;
   out_8172511356407623782[45] = 0;
   out_8172511356407623782[46] = 0;
   out_8172511356407623782[47] = 0;
   out_8172511356407623782[48] = 0;
   out_8172511356407623782[49] = 0;
   out_8172511356407623782[50] = dt;
   out_8172511356407623782[51] = 0;
   out_8172511356407623782[52] = 0;
   out_8172511356407623782[53] = 0;
   out_8172511356407623782[54] = 0;
   out_8172511356407623782[55] = 0;
   out_8172511356407623782[56] = 0;
   out_8172511356407623782[57] = 0;
   out_8172511356407623782[58] = 0;
   out_8172511356407623782[59] = 0;
   out_8172511356407623782[60] = 0;
   out_8172511356407623782[61] = 0;
   out_8172511356407623782[62] = 0;
   out_8172511356407623782[63] = 0;
   out_8172511356407623782[64] = 0;
   out_8172511356407623782[65] = 0;
   out_8172511356407623782[66] = 1;
   out_8172511356407623782[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_8172511356407623782[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_8172511356407623782[69] = 0;
   out_8172511356407623782[70] = 0;
   out_8172511356407623782[71] = 0;
   out_8172511356407623782[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_8172511356407623782[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_8172511356407623782[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_8172511356407623782[75] = 0;
   out_8172511356407623782[76] = 0;
   out_8172511356407623782[77] = 0;
   out_8172511356407623782[78] = 0;
   out_8172511356407623782[79] = 0;
   out_8172511356407623782[80] = 0;
   out_8172511356407623782[81] = 0;
   out_8172511356407623782[82] = 0;
   out_8172511356407623782[83] = 0;
   out_8172511356407623782[84] = 0;
   out_8172511356407623782[85] = 0;
   out_8172511356407623782[86] = 0;
   out_8172511356407623782[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_8172511356407623782[88] = 1;
   out_8172511356407623782[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_8172511356407623782[90] = 0;
   out_8172511356407623782[91] = 0;
   out_8172511356407623782[92] = 0;
   out_8172511356407623782[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_8172511356407623782[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_8172511356407623782[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_8172511356407623782[96] = 0;
   out_8172511356407623782[97] = 0;
   out_8172511356407623782[98] = 0;
   out_8172511356407623782[99] = 0;
   out_8172511356407623782[100] = 0;
   out_8172511356407623782[101] = 0;
   out_8172511356407623782[102] = 0;
   out_8172511356407623782[103] = 0;
   out_8172511356407623782[104] = 0;
   out_8172511356407623782[105] = 0;
   out_8172511356407623782[106] = 0;
   out_8172511356407623782[107] = 0;
   out_8172511356407623782[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_8172511356407623782[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_8172511356407623782[110] = 1;
   out_8172511356407623782[111] = 0;
   out_8172511356407623782[112] = 0;
   out_8172511356407623782[113] = 0;
   out_8172511356407623782[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_8172511356407623782[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_8172511356407623782[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_8172511356407623782[117] = 0;
   out_8172511356407623782[118] = 0;
   out_8172511356407623782[119] = 0;
   out_8172511356407623782[120] = 0;
   out_8172511356407623782[121] = 0;
   out_8172511356407623782[122] = 0;
   out_8172511356407623782[123] = 0;
   out_8172511356407623782[124] = 0;
   out_8172511356407623782[125] = 0;
   out_8172511356407623782[126] = 0;
   out_8172511356407623782[127] = 0;
   out_8172511356407623782[128] = 0;
   out_8172511356407623782[129] = 0;
   out_8172511356407623782[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_8172511356407623782[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_8172511356407623782[132] = 1;
   out_8172511356407623782[133] = 0;
   out_8172511356407623782[134] = 0;
   out_8172511356407623782[135] = 0;
   out_8172511356407623782[136] = 0;
   out_8172511356407623782[137] = 0;
   out_8172511356407623782[138] = 0;
   out_8172511356407623782[139] = 0;
   out_8172511356407623782[140] = 0;
   out_8172511356407623782[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_8172511356407623782[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_8172511356407623782[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_8172511356407623782[144] = 0;
   out_8172511356407623782[145] = 0;
   out_8172511356407623782[146] = 0;
   out_8172511356407623782[147] = 0;
   out_8172511356407623782[148] = 0;
   out_8172511356407623782[149] = 0;
   out_8172511356407623782[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_8172511356407623782[151] = 0;
   out_8172511356407623782[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_8172511356407623782[153] = 0;
   out_8172511356407623782[154] = 1;
   out_8172511356407623782[155] = 0;
   out_8172511356407623782[156] = 0;
   out_8172511356407623782[157] = 0;
   out_8172511356407623782[158] = 0;
   out_8172511356407623782[159] = 0;
   out_8172511356407623782[160] = 0;
   out_8172511356407623782[161] = 0;
   out_8172511356407623782[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_8172511356407623782[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_8172511356407623782[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_8172511356407623782[165] = 0;
   out_8172511356407623782[166] = 0;
   out_8172511356407623782[167] = 0;
   out_8172511356407623782[168] = 0;
   out_8172511356407623782[169] = 0;
   out_8172511356407623782[170] = 0;
   out_8172511356407623782[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_8172511356407623782[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_8172511356407623782[173] = 0;
   out_8172511356407623782[174] = 0;
   out_8172511356407623782[175] = 0;
   out_8172511356407623782[176] = 1;
   out_8172511356407623782[177] = 0;
   out_8172511356407623782[178] = 0;
   out_8172511356407623782[179] = 0;
   out_8172511356407623782[180] = 0;
   out_8172511356407623782[181] = 0;
   out_8172511356407623782[182] = 0;
   out_8172511356407623782[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_8172511356407623782[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_8172511356407623782[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_8172511356407623782[186] = 0;
   out_8172511356407623782[187] = 0;
   out_8172511356407623782[188] = 0;
   out_8172511356407623782[189] = 0;
   out_8172511356407623782[190] = 0;
   out_8172511356407623782[191] = 0;
   out_8172511356407623782[192] = 0;
   out_8172511356407623782[193] = 0;
   out_8172511356407623782[194] = 0;
   out_8172511356407623782[195] = 0;
   out_8172511356407623782[196] = 0;
   out_8172511356407623782[197] = 0;
   out_8172511356407623782[198] = 1;
   out_8172511356407623782[199] = 0;
   out_8172511356407623782[200] = 0;
   out_8172511356407623782[201] = 0;
   out_8172511356407623782[202] = 0;
   out_8172511356407623782[203] = 0;
   out_8172511356407623782[204] = 0;
   out_8172511356407623782[205] = 0;
   out_8172511356407623782[206] = 0;
   out_8172511356407623782[207] = 0;
   out_8172511356407623782[208] = 0;
   out_8172511356407623782[209] = 0;
   out_8172511356407623782[210] = 0;
   out_8172511356407623782[211] = 0;
   out_8172511356407623782[212] = 0;
   out_8172511356407623782[213] = 0;
   out_8172511356407623782[214] = 0;
   out_8172511356407623782[215] = 0;
   out_8172511356407623782[216] = 0;
   out_8172511356407623782[217] = 0;
   out_8172511356407623782[218] = 0;
   out_8172511356407623782[219] = 0;
   out_8172511356407623782[220] = 1;
   out_8172511356407623782[221] = 0;
   out_8172511356407623782[222] = 0;
   out_8172511356407623782[223] = 0;
   out_8172511356407623782[224] = 0;
   out_8172511356407623782[225] = 0;
   out_8172511356407623782[226] = 0;
   out_8172511356407623782[227] = 0;
   out_8172511356407623782[228] = 0;
   out_8172511356407623782[229] = 0;
   out_8172511356407623782[230] = 0;
   out_8172511356407623782[231] = 0;
   out_8172511356407623782[232] = 0;
   out_8172511356407623782[233] = 0;
   out_8172511356407623782[234] = 0;
   out_8172511356407623782[235] = 0;
   out_8172511356407623782[236] = 0;
   out_8172511356407623782[237] = 0;
   out_8172511356407623782[238] = 0;
   out_8172511356407623782[239] = 0;
   out_8172511356407623782[240] = 0;
   out_8172511356407623782[241] = 0;
   out_8172511356407623782[242] = 1;
   out_8172511356407623782[243] = 0;
   out_8172511356407623782[244] = 0;
   out_8172511356407623782[245] = 0;
   out_8172511356407623782[246] = 0;
   out_8172511356407623782[247] = 0;
   out_8172511356407623782[248] = 0;
   out_8172511356407623782[249] = 0;
   out_8172511356407623782[250] = 0;
   out_8172511356407623782[251] = 0;
   out_8172511356407623782[252] = 0;
   out_8172511356407623782[253] = 0;
   out_8172511356407623782[254] = 0;
   out_8172511356407623782[255] = 0;
   out_8172511356407623782[256] = 0;
   out_8172511356407623782[257] = 0;
   out_8172511356407623782[258] = 0;
   out_8172511356407623782[259] = 0;
   out_8172511356407623782[260] = 0;
   out_8172511356407623782[261] = 0;
   out_8172511356407623782[262] = 0;
   out_8172511356407623782[263] = 0;
   out_8172511356407623782[264] = 1;
   out_8172511356407623782[265] = 0;
   out_8172511356407623782[266] = 0;
   out_8172511356407623782[267] = 0;
   out_8172511356407623782[268] = 0;
   out_8172511356407623782[269] = 0;
   out_8172511356407623782[270] = 0;
   out_8172511356407623782[271] = 0;
   out_8172511356407623782[272] = 0;
   out_8172511356407623782[273] = 0;
   out_8172511356407623782[274] = 0;
   out_8172511356407623782[275] = 0;
   out_8172511356407623782[276] = 0;
   out_8172511356407623782[277] = 0;
   out_8172511356407623782[278] = 0;
   out_8172511356407623782[279] = 0;
   out_8172511356407623782[280] = 0;
   out_8172511356407623782[281] = 0;
   out_8172511356407623782[282] = 0;
   out_8172511356407623782[283] = 0;
   out_8172511356407623782[284] = 0;
   out_8172511356407623782[285] = 0;
   out_8172511356407623782[286] = 1;
   out_8172511356407623782[287] = 0;
   out_8172511356407623782[288] = 0;
   out_8172511356407623782[289] = 0;
   out_8172511356407623782[290] = 0;
   out_8172511356407623782[291] = 0;
   out_8172511356407623782[292] = 0;
   out_8172511356407623782[293] = 0;
   out_8172511356407623782[294] = 0;
   out_8172511356407623782[295] = 0;
   out_8172511356407623782[296] = 0;
   out_8172511356407623782[297] = 0;
   out_8172511356407623782[298] = 0;
   out_8172511356407623782[299] = 0;
   out_8172511356407623782[300] = 0;
   out_8172511356407623782[301] = 0;
   out_8172511356407623782[302] = 0;
   out_8172511356407623782[303] = 0;
   out_8172511356407623782[304] = 0;
   out_8172511356407623782[305] = 0;
   out_8172511356407623782[306] = 0;
   out_8172511356407623782[307] = 0;
   out_8172511356407623782[308] = 1;
   out_8172511356407623782[309] = 0;
   out_8172511356407623782[310] = 0;
   out_8172511356407623782[311] = 0;
   out_8172511356407623782[312] = 0;
   out_8172511356407623782[313] = 0;
   out_8172511356407623782[314] = 0;
   out_8172511356407623782[315] = 0;
   out_8172511356407623782[316] = 0;
   out_8172511356407623782[317] = 0;
   out_8172511356407623782[318] = 0;
   out_8172511356407623782[319] = 0;
   out_8172511356407623782[320] = 0;
   out_8172511356407623782[321] = 0;
   out_8172511356407623782[322] = 0;
   out_8172511356407623782[323] = 0;
   out_8172511356407623782[324] = 0;
   out_8172511356407623782[325] = 0;
   out_8172511356407623782[326] = 0;
   out_8172511356407623782[327] = 0;
   out_8172511356407623782[328] = 0;
   out_8172511356407623782[329] = 0;
   out_8172511356407623782[330] = 1;
   out_8172511356407623782[331] = 0;
   out_8172511356407623782[332] = 0;
   out_8172511356407623782[333] = 0;
   out_8172511356407623782[334] = 0;
   out_8172511356407623782[335] = 0;
   out_8172511356407623782[336] = 0;
   out_8172511356407623782[337] = 0;
   out_8172511356407623782[338] = 0;
   out_8172511356407623782[339] = 0;
   out_8172511356407623782[340] = 0;
   out_8172511356407623782[341] = 0;
   out_8172511356407623782[342] = 0;
   out_8172511356407623782[343] = 0;
   out_8172511356407623782[344] = 0;
   out_8172511356407623782[345] = 0;
   out_8172511356407623782[346] = 0;
   out_8172511356407623782[347] = 0;
   out_8172511356407623782[348] = 0;
   out_8172511356407623782[349] = 0;
   out_8172511356407623782[350] = 0;
   out_8172511356407623782[351] = 0;
   out_8172511356407623782[352] = 1;
   out_8172511356407623782[353] = 0;
   out_8172511356407623782[354] = 0;
   out_8172511356407623782[355] = 0;
   out_8172511356407623782[356] = 0;
   out_8172511356407623782[357] = 0;
   out_8172511356407623782[358] = 0;
   out_8172511356407623782[359] = 0;
   out_8172511356407623782[360] = 0;
   out_8172511356407623782[361] = 0;
   out_8172511356407623782[362] = 0;
   out_8172511356407623782[363] = 0;
   out_8172511356407623782[364] = 0;
   out_8172511356407623782[365] = 0;
   out_8172511356407623782[366] = 0;
   out_8172511356407623782[367] = 0;
   out_8172511356407623782[368] = 0;
   out_8172511356407623782[369] = 0;
   out_8172511356407623782[370] = 0;
   out_8172511356407623782[371] = 0;
   out_8172511356407623782[372] = 0;
   out_8172511356407623782[373] = 0;
   out_8172511356407623782[374] = 1;
   out_8172511356407623782[375] = 0;
   out_8172511356407623782[376] = 0;
   out_8172511356407623782[377] = 0;
   out_8172511356407623782[378] = 0;
   out_8172511356407623782[379] = 0;
   out_8172511356407623782[380] = 0;
   out_8172511356407623782[381] = 0;
   out_8172511356407623782[382] = 0;
   out_8172511356407623782[383] = 0;
   out_8172511356407623782[384] = 0;
   out_8172511356407623782[385] = 0;
   out_8172511356407623782[386] = 0;
   out_8172511356407623782[387] = 0;
   out_8172511356407623782[388] = 0;
   out_8172511356407623782[389] = 0;
   out_8172511356407623782[390] = 0;
   out_8172511356407623782[391] = 0;
   out_8172511356407623782[392] = 0;
   out_8172511356407623782[393] = 0;
   out_8172511356407623782[394] = 0;
   out_8172511356407623782[395] = 0;
   out_8172511356407623782[396] = 1;
   out_8172511356407623782[397] = 0;
   out_8172511356407623782[398] = 0;
   out_8172511356407623782[399] = 0;
   out_8172511356407623782[400] = 0;
   out_8172511356407623782[401] = 0;
   out_8172511356407623782[402] = 0;
   out_8172511356407623782[403] = 0;
   out_8172511356407623782[404] = 0;
   out_8172511356407623782[405] = 0;
   out_8172511356407623782[406] = 0;
   out_8172511356407623782[407] = 0;
   out_8172511356407623782[408] = 0;
   out_8172511356407623782[409] = 0;
   out_8172511356407623782[410] = 0;
   out_8172511356407623782[411] = 0;
   out_8172511356407623782[412] = 0;
   out_8172511356407623782[413] = 0;
   out_8172511356407623782[414] = 0;
   out_8172511356407623782[415] = 0;
   out_8172511356407623782[416] = 0;
   out_8172511356407623782[417] = 0;
   out_8172511356407623782[418] = 1;
   out_8172511356407623782[419] = 0;
   out_8172511356407623782[420] = 0;
   out_8172511356407623782[421] = 0;
   out_8172511356407623782[422] = 0;
   out_8172511356407623782[423] = 0;
   out_8172511356407623782[424] = 0;
   out_8172511356407623782[425] = 0;
   out_8172511356407623782[426] = 0;
   out_8172511356407623782[427] = 0;
   out_8172511356407623782[428] = 0;
   out_8172511356407623782[429] = 0;
   out_8172511356407623782[430] = 0;
   out_8172511356407623782[431] = 0;
   out_8172511356407623782[432] = 0;
   out_8172511356407623782[433] = 0;
   out_8172511356407623782[434] = 0;
   out_8172511356407623782[435] = 0;
   out_8172511356407623782[436] = 0;
   out_8172511356407623782[437] = 0;
   out_8172511356407623782[438] = 0;
   out_8172511356407623782[439] = 0;
   out_8172511356407623782[440] = 1;
}
void h_4(double *state, double *unused, double *out_7710251854892182174) {
   out_7710251854892182174[0] = state[10] + state[13];
   out_7710251854892182174[1] = state[11] + state[14];
   out_7710251854892182174[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_1253127394016013649) {
   out_1253127394016013649[0] = 0;
   out_1253127394016013649[1] = 0;
   out_1253127394016013649[2] = 0;
   out_1253127394016013649[3] = 0;
   out_1253127394016013649[4] = 0;
   out_1253127394016013649[5] = 0;
   out_1253127394016013649[6] = 0;
   out_1253127394016013649[7] = 0;
   out_1253127394016013649[8] = 0;
   out_1253127394016013649[9] = 0;
   out_1253127394016013649[10] = 1;
   out_1253127394016013649[11] = 0;
   out_1253127394016013649[12] = 0;
   out_1253127394016013649[13] = 1;
   out_1253127394016013649[14] = 0;
   out_1253127394016013649[15] = 0;
   out_1253127394016013649[16] = 0;
   out_1253127394016013649[17] = 0;
   out_1253127394016013649[18] = 0;
   out_1253127394016013649[19] = 0;
   out_1253127394016013649[20] = 0;
   out_1253127394016013649[21] = 0;
   out_1253127394016013649[22] = 0;
   out_1253127394016013649[23] = 0;
   out_1253127394016013649[24] = 0;
   out_1253127394016013649[25] = 0;
   out_1253127394016013649[26] = 0;
   out_1253127394016013649[27] = 0;
   out_1253127394016013649[28] = 0;
   out_1253127394016013649[29] = 0;
   out_1253127394016013649[30] = 0;
   out_1253127394016013649[31] = 0;
   out_1253127394016013649[32] = 0;
   out_1253127394016013649[33] = 1;
   out_1253127394016013649[34] = 0;
   out_1253127394016013649[35] = 0;
   out_1253127394016013649[36] = 1;
   out_1253127394016013649[37] = 0;
   out_1253127394016013649[38] = 0;
   out_1253127394016013649[39] = 0;
   out_1253127394016013649[40] = 0;
   out_1253127394016013649[41] = 0;
   out_1253127394016013649[42] = 0;
   out_1253127394016013649[43] = 0;
   out_1253127394016013649[44] = 0;
   out_1253127394016013649[45] = 0;
   out_1253127394016013649[46] = 0;
   out_1253127394016013649[47] = 0;
   out_1253127394016013649[48] = 0;
   out_1253127394016013649[49] = 0;
   out_1253127394016013649[50] = 0;
   out_1253127394016013649[51] = 0;
   out_1253127394016013649[52] = 0;
   out_1253127394016013649[53] = 0;
   out_1253127394016013649[54] = 0;
   out_1253127394016013649[55] = 0;
   out_1253127394016013649[56] = 1;
   out_1253127394016013649[57] = 0;
   out_1253127394016013649[58] = 0;
   out_1253127394016013649[59] = 1;
   out_1253127394016013649[60] = 0;
   out_1253127394016013649[61] = 0;
   out_1253127394016013649[62] = 0;
   out_1253127394016013649[63] = 0;
   out_1253127394016013649[64] = 0;
   out_1253127394016013649[65] = 0;
}
void h_9(double *state, double *unused, double *out_5061423323143147862) {
   out_5061423323143147862[0] = state[10];
   out_5061423323143147862[1] = state[11];
   out_5061423323143147862[2] = state[12];
}
void H_9(double *state, double *unused, double *out_1494317040645604294) {
   out_1494317040645604294[0] = 0;
   out_1494317040645604294[1] = 0;
   out_1494317040645604294[2] = 0;
   out_1494317040645604294[3] = 0;
   out_1494317040645604294[4] = 0;
   out_1494317040645604294[5] = 0;
   out_1494317040645604294[6] = 0;
   out_1494317040645604294[7] = 0;
   out_1494317040645604294[8] = 0;
   out_1494317040645604294[9] = 0;
   out_1494317040645604294[10] = 1;
   out_1494317040645604294[11] = 0;
   out_1494317040645604294[12] = 0;
   out_1494317040645604294[13] = 0;
   out_1494317040645604294[14] = 0;
   out_1494317040645604294[15] = 0;
   out_1494317040645604294[16] = 0;
   out_1494317040645604294[17] = 0;
   out_1494317040645604294[18] = 0;
   out_1494317040645604294[19] = 0;
   out_1494317040645604294[20] = 0;
   out_1494317040645604294[21] = 0;
   out_1494317040645604294[22] = 0;
   out_1494317040645604294[23] = 0;
   out_1494317040645604294[24] = 0;
   out_1494317040645604294[25] = 0;
   out_1494317040645604294[26] = 0;
   out_1494317040645604294[27] = 0;
   out_1494317040645604294[28] = 0;
   out_1494317040645604294[29] = 0;
   out_1494317040645604294[30] = 0;
   out_1494317040645604294[31] = 0;
   out_1494317040645604294[32] = 0;
   out_1494317040645604294[33] = 1;
   out_1494317040645604294[34] = 0;
   out_1494317040645604294[35] = 0;
   out_1494317040645604294[36] = 0;
   out_1494317040645604294[37] = 0;
   out_1494317040645604294[38] = 0;
   out_1494317040645604294[39] = 0;
   out_1494317040645604294[40] = 0;
   out_1494317040645604294[41] = 0;
   out_1494317040645604294[42] = 0;
   out_1494317040645604294[43] = 0;
   out_1494317040645604294[44] = 0;
   out_1494317040645604294[45] = 0;
   out_1494317040645604294[46] = 0;
   out_1494317040645604294[47] = 0;
   out_1494317040645604294[48] = 0;
   out_1494317040645604294[49] = 0;
   out_1494317040645604294[50] = 0;
   out_1494317040645604294[51] = 0;
   out_1494317040645604294[52] = 0;
   out_1494317040645604294[53] = 0;
   out_1494317040645604294[54] = 0;
   out_1494317040645604294[55] = 0;
   out_1494317040645604294[56] = 1;
   out_1494317040645604294[57] = 0;
   out_1494317040645604294[58] = 0;
   out_1494317040645604294[59] = 0;
   out_1494317040645604294[60] = 0;
   out_1494317040645604294[61] = 0;
   out_1494317040645604294[62] = 0;
   out_1494317040645604294[63] = 0;
   out_1494317040645604294[64] = 0;
   out_1494317040645604294[65] = 0;
}
void h_10(double *state, double *unused, double *out_5169839670943215997) {
   out_5169839670943215997[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_5169839670943215997[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_5169839670943215997[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_8648619985202259612) {
   out_8648619985202259612[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_8648619985202259612[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_8648619985202259612[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_8648619985202259612[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_8648619985202259612[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_8648619985202259612[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_8648619985202259612[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_8648619985202259612[7] = 0;
   out_8648619985202259612[8] = 0;
   out_8648619985202259612[9] = 0;
   out_8648619985202259612[10] = 0;
   out_8648619985202259612[11] = 0;
   out_8648619985202259612[12] = 0;
   out_8648619985202259612[13] = 0;
   out_8648619985202259612[14] = 0;
   out_8648619985202259612[15] = 0;
   out_8648619985202259612[16] = 1;
   out_8648619985202259612[17] = 0;
   out_8648619985202259612[18] = 0;
   out_8648619985202259612[19] = 1;
   out_8648619985202259612[20] = 0;
   out_8648619985202259612[21] = 0;
   out_8648619985202259612[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_8648619985202259612[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_8648619985202259612[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_8648619985202259612[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_8648619985202259612[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_8648619985202259612[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_8648619985202259612[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_8648619985202259612[29] = 0;
   out_8648619985202259612[30] = 0;
   out_8648619985202259612[31] = 0;
   out_8648619985202259612[32] = 0;
   out_8648619985202259612[33] = 0;
   out_8648619985202259612[34] = 0;
   out_8648619985202259612[35] = 0;
   out_8648619985202259612[36] = 0;
   out_8648619985202259612[37] = 0;
   out_8648619985202259612[38] = 0;
   out_8648619985202259612[39] = 1;
   out_8648619985202259612[40] = 0;
   out_8648619985202259612[41] = 0;
   out_8648619985202259612[42] = 1;
   out_8648619985202259612[43] = 0;
   out_8648619985202259612[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_8648619985202259612[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_8648619985202259612[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_8648619985202259612[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_8648619985202259612[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_8648619985202259612[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_8648619985202259612[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_8648619985202259612[51] = 0;
   out_8648619985202259612[52] = 0;
   out_8648619985202259612[53] = 0;
   out_8648619985202259612[54] = 0;
   out_8648619985202259612[55] = 0;
   out_8648619985202259612[56] = 0;
   out_8648619985202259612[57] = 0;
   out_8648619985202259612[58] = 0;
   out_8648619985202259612[59] = 0;
   out_8648619985202259612[60] = 0;
   out_8648619985202259612[61] = 0;
   out_8648619985202259612[62] = 1;
   out_8648619985202259612[63] = 0;
   out_8648619985202259612[64] = 0;
   out_8648619985202259612[65] = 1;
}
void h_12(double *state, double *unused, double *out_8725363731226918659) {
   out_8725363731226918659[0] = state[0];
   out_8725363731226918659[1] = state[1];
   out_8725363731226918659[2] = state[2];
}
void H_12(double *state, double *unused, double *out_6272583802047975444) {
   out_6272583802047975444[0] = 1;
   out_6272583802047975444[1] = 0;
   out_6272583802047975444[2] = 0;
   out_6272583802047975444[3] = 0;
   out_6272583802047975444[4] = 0;
   out_6272583802047975444[5] = 0;
   out_6272583802047975444[6] = 0;
   out_6272583802047975444[7] = 0;
   out_6272583802047975444[8] = 0;
   out_6272583802047975444[9] = 0;
   out_6272583802047975444[10] = 0;
   out_6272583802047975444[11] = 0;
   out_6272583802047975444[12] = 0;
   out_6272583802047975444[13] = 0;
   out_6272583802047975444[14] = 0;
   out_6272583802047975444[15] = 0;
   out_6272583802047975444[16] = 0;
   out_6272583802047975444[17] = 0;
   out_6272583802047975444[18] = 0;
   out_6272583802047975444[19] = 0;
   out_6272583802047975444[20] = 0;
   out_6272583802047975444[21] = 0;
   out_6272583802047975444[22] = 0;
   out_6272583802047975444[23] = 1;
   out_6272583802047975444[24] = 0;
   out_6272583802047975444[25] = 0;
   out_6272583802047975444[26] = 0;
   out_6272583802047975444[27] = 0;
   out_6272583802047975444[28] = 0;
   out_6272583802047975444[29] = 0;
   out_6272583802047975444[30] = 0;
   out_6272583802047975444[31] = 0;
   out_6272583802047975444[32] = 0;
   out_6272583802047975444[33] = 0;
   out_6272583802047975444[34] = 0;
   out_6272583802047975444[35] = 0;
   out_6272583802047975444[36] = 0;
   out_6272583802047975444[37] = 0;
   out_6272583802047975444[38] = 0;
   out_6272583802047975444[39] = 0;
   out_6272583802047975444[40] = 0;
   out_6272583802047975444[41] = 0;
   out_6272583802047975444[42] = 0;
   out_6272583802047975444[43] = 0;
   out_6272583802047975444[44] = 0;
   out_6272583802047975444[45] = 0;
   out_6272583802047975444[46] = 1;
   out_6272583802047975444[47] = 0;
   out_6272583802047975444[48] = 0;
   out_6272583802047975444[49] = 0;
   out_6272583802047975444[50] = 0;
   out_6272583802047975444[51] = 0;
   out_6272583802047975444[52] = 0;
   out_6272583802047975444[53] = 0;
   out_6272583802047975444[54] = 0;
   out_6272583802047975444[55] = 0;
   out_6272583802047975444[56] = 0;
   out_6272583802047975444[57] = 0;
   out_6272583802047975444[58] = 0;
   out_6272583802047975444[59] = 0;
   out_6272583802047975444[60] = 0;
   out_6272583802047975444[61] = 0;
   out_6272583802047975444[62] = 0;
   out_6272583802047975444[63] = 0;
   out_6272583802047975444[64] = 0;
   out_6272583802047975444[65] = 0;
}
void h_35(double *state, double *unused, double *out_1528919473697599495) {
   out_1528919473697599495[0] = state[7];
   out_1528919473697599495[1] = state[8];
   out_1528919473697599495[2] = state[9];
}
void H_35(double *state, double *unused, double *out_9018146834372989153) {
   out_9018146834372989153[0] = 0;
   out_9018146834372989153[1] = 0;
   out_9018146834372989153[2] = 0;
   out_9018146834372989153[3] = 0;
   out_9018146834372989153[4] = 0;
   out_9018146834372989153[5] = 0;
   out_9018146834372989153[6] = 0;
   out_9018146834372989153[7] = 1;
   out_9018146834372989153[8] = 0;
   out_9018146834372989153[9] = 0;
   out_9018146834372989153[10] = 0;
   out_9018146834372989153[11] = 0;
   out_9018146834372989153[12] = 0;
   out_9018146834372989153[13] = 0;
   out_9018146834372989153[14] = 0;
   out_9018146834372989153[15] = 0;
   out_9018146834372989153[16] = 0;
   out_9018146834372989153[17] = 0;
   out_9018146834372989153[18] = 0;
   out_9018146834372989153[19] = 0;
   out_9018146834372989153[20] = 0;
   out_9018146834372989153[21] = 0;
   out_9018146834372989153[22] = 0;
   out_9018146834372989153[23] = 0;
   out_9018146834372989153[24] = 0;
   out_9018146834372989153[25] = 0;
   out_9018146834372989153[26] = 0;
   out_9018146834372989153[27] = 0;
   out_9018146834372989153[28] = 0;
   out_9018146834372989153[29] = 0;
   out_9018146834372989153[30] = 1;
   out_9018146834372989153[31] = 0;
   out_9018146834372989153[32] = 0;
   out_9018146834372989153[33] = 0;
   out_9018146834372989153[34] = 0;
   out_9018146834372989153[35] = 0;
   out_9018146834372989153[36] = 0;
   out_9018146834372989153[37] = 0;
   out_9018146834372989153[38] = 0;
   out_9018146834372989153[39] = 0;
   out_9018146834372989153[40] = 0;
   out_9018146834372989153[41] = 0;
   out_9018146834372989153[42] = 0;
   out_9018146834372989153[43] = 0;
   out_9018146834372989153[44] = 0;
   out_9018146834372989153[45] = 0;
   out_9018146834372989153[46] = 0;
   out_9018146834372989153[47] = 0;
   out_9018146834372989153[48] = 0;
   out_9018146834372989153[49] = 0;
   out_9018146834372989153[50] = 0;
   out_9018146834372989153[51] = 0;
   out_9018146834372989153[52] = 0;
   out_9018146834372989153[53] = 1;
   out_9018146834372989153[54] = 0;
   out_9018146834372989153[55] = 0;
   out_9018146834372989153[56] = 0;
   out_9018146834372989153[57] = 0;
   out_9018146834372989153[58] = 0;
   out_9018146834372989153[59] = 0;
   out_9018146834372989153[60] = 0;
   out_9018146834372989153[61] = 0;
   out_9018146834372989153[62] = 0;
   out_9018146834372989153[63] = 0;
   out_9018146834372989153[64] = 0;
   out_9018146834372989153[65] = 0;
}
void h_32(double *state, double *unused, double *out_8451539957787534875) {
   out_8451539957787534875[0] = state[3];
   out_8451539957787534875[1] = state[4];
   out_8451539957787534875[2] = state[5];
   out_8451539957787534875[3] = state[6];
}
void H_32(double *state, double *unused, double *out_401090213716711955) {
   out_401090213716711955[0] = 0;
   out_401090213716711955[1] = 0;
   out_401090213716711955[2] = 0;
   out_401090213716711955[3] = 1;
   out_401090213716711955[4] = 0;
   out_401090213716711955[5] = 0;
   out_401090213716711955[6] = 0;
   out_401090213716711955[7] = 0;
   out_401090213716711955[8] = 0;
   out_401090213716711955[9] = 0;
   out_401090213716711955[10] = 0;
   out_401090213716711955[11] = 0;
   out_401090213716711955[12] = 0;
   out_401090213716711955[13] = 0;
   out_401090213716711955[14] = 0;
   out_401090213716711955[15] = 0;
   out_401090213716711955[16] = 0;
   out_401090213716711955[17] = 0;
   out_401090213716711955[18] = 0;
   out_401090213716711955[19] = 0;
   out_401090213716711955[20] = 0;
   out_401090213716711955[21] = 0;
   out_401090213716711955[22] = 0;
   out_401090213716711955[23] = 0;
   out_401090213716711955[24] = 0;
   out_401090213716711955[25] = 0;
   out_401090213716711955[26] = 1;
   out_401090213716711955[27] = 0;
   out_401090213716711955[28] = 0;
   out_401090213716711955[29] = 0;
   out_401090213716711955[30] = 0;
   out_401090213716711955[31] = 0;
   out_401090213716711955[32] = 0;
   out_401090213716711955[33] = 0;
   out_401090213716711955[34] = 0;
   out_401090213716711955[35] = 0;
   out_401090213716711955[36] = 0;
   out_401090213716711955[37] = 0;
   out_401090213716711955[38] = 0;
   out_401090213716711955[39] = 0;
   out_401090213716711955[40] = 0;
   out_401090213716711955[41] = 0;
   out_401090213716711955[42] = 0;
   out_401090213716711955[43] = 0;
   out_401090213716711955[44] = 0;
   out_401090213716711955[45] = 0;
   out_401090213716711955[46] = 0;
   out_401090213716711955[47] = 0;
   out_401090213716711955[48] = 0;
   out_401090213716711955[49] = 1;
   out_401090213716711955[50] = 0;
   out_401090213716711955[51] = 0;
   out_401090213716711955[52] = 0;
   out_401090213716711955[53] = 0;
   out_401090213716711955[54] = 0;
   out_401090213716711955[55] = 0;
   out_401090213716711955[56] = 0;
   out_401090213716711955[57] = 0;
   out_401090213716711955[58] = 0;
   out_401090213716711955[59] = 0;
   out_401090213716711955[60] = 0;
   out_401090213716711955[61] = 0;
   out_401090213716711955[62] = 0;
   out_401090213716711955[63] = 0;
   out_401090213716711955[64] = 0;
   out_401090213716711955[65] = 0;
   out_401090213716711955[66] = 0;
   out_401090213716711955[67] = 0;
   out_401090213716711955[68] = 0;
   out_401090213716711955[69] = 0;
   out_401090213716711955[70] = 0;
   out_401090213716711955[71] = 0;
   out_401090213716711955[72] = 1;
   out_401090213716711955[73] = 0;
   out_401090213716711955[74] = 0;
   out_401090213716711955[75] = 0;
   out_401090213716711955[76] = 0;
   out_401090213716711955[77] = 0;
   out_401090213716711955[78] = 0;
   out_401090213716711955[79] = 0;
   out_401090213716711955[80] = 0;
   out_401090213716711955[81] = 0;
   out_401090213716711955[82] = 0;
   out_401090213716711955[83] = 0;
   out_401090213716711955[84] = 0;
   out_401090213716711955[85] = 0;
   out_401090213716711955[86] = 0;
   out_401090213716711955[87] = 0;
}
void h_13(double *state, double *unused, double *out_6598065104401855607) {
   out_6598065104401855607[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_6598065104401855607[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_6598065104401855607[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_7875327432599178702) {
   out_7875327432599178702[0] = 0;
   out_7875327432599178702[1] = 0;
   out_7875327432599178702[2] = 0;
   out_7875327432599178702[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_7875327432599178702[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_7875327432599178702[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_7875327432599178702[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_7875327432599178702[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_7875327432599178702[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_7875327432599178702[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_7875327432599178702[10] = 0;
   out_7875327432599178702[11] = 0;
   out_7875327432599178702[12] = 0;
   out_7875327432599178702[13] = 0;
   out_7875327432599178702[14] = 0;
   out_7875327432599178702[15] = 0;
   out_7875327432599178702[16] = 0;
   out_7875327432599178702[17] = 0;
   out_7875327432599178702[18] = 0;
   out_7875327432599178702[19] = 0;
   out_7875327432599178702[20] = 0;
   out_7875327432599178702[21] = 0;
   out_7875327432599178702[22] = 0;
   out_7875327432599178702[23] = 0;
   out_7875327432599178702[24] = 0;
   out_7875327432599178702[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_7875327432599178702[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_7875327432599178702[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_7875327432599178702[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_7875327432599178702[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_7875327432599178702[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_7875327432599178702[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_7875327432599178702[32] = 0;
   out_7875327432599178702[33] = 0;
   out_7875327432599178702[34] = 0;
   out_7875327432599178702[35] = 0;
   out_7875327432599178702[36] = 0;
   out_7875327432599178702[37] = 0;
   out_7875327432599178702[38] = 0;
   out_7875327432599178702[39] = 0;
   out_7875327432599178702[40] = 0;
   out_7875327432599178702[41] = 0;
   out_7875327432599178702[42] = 0;
   out_7875327432599178702[43] = 0;
   out_7875327432599178702[44] = 0;
   out_7875327432599178702[45] = 0;
   out_7875327432599178702[46] = 0;
   out_7875327432599178702[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_7875327432599178702[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_7875327432599178702[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_7875327432599178702[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_7875327432599178702[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_7875327432599178702[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_7875327432599178702[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_7875327432599178702[54] = 0;
   out_7875327432599178702[55] = 0;
   out_7875327432599178702[56] = 0;
   out_7875327432599178702[57] = 0;
   out_7875327432599178702[58] = 0;
   out_7875327432599178702[59] = 0;
   out_7875327432599178702[60] = 0;
   out_7875327432599178702[61] = 0;
   out_7875327432599178702[62] = 0;
   out_7875327432599178702[63] = 0;
   out_7875327432599178702[64] = 0;
   out_7875327432599178702[65] = 0;
}
void h_14(double *state, double *unused, double *out_5061423323143147862) {
   out_5061423323143147862[0] = state[10];
   out_5061423323143147862[1] = state[11];
   out_5061423323143147862[2] = state[12];
}
void H_14(double *state, double *unused, double *out_1494317040645604294) {
   out_1494317040645604294[0] = 0;
   out_1494317040645604294[1] = 0;
   out_1494317040645604294[2] = 0;
   out_1494317040645604294[3] = 0;
   out_1494317040645604294[4] = 0;
   out_1494317040645604294[5] = 0;
   out_1494317040645604294[6] = 0;
   out_1494317040645604294[7] = 0;
   out_1494317040645604294[8] = 0;
   out_1494317040645604294[9] = 0;
   out_1494317040645604294[10] = 1;
   out_1494317040645604294[11] = 0;
   out_1494317040645604294[12] = 0;
   out_1494317040645604294[13] = 0;
   out_1494317040645604294[14] = 0;
   out_1494317040645604294[15] = 0;
   out_1494317040645604294[16] = 0;
   out_1494317040645604294[17] = 0;
   out_1494317040645604294[18] = 0;
   out_1494317040645604294[19] = 0;
   out_1494317040645604294[20] = 0;
   out_1494317040645604294[21] = 0;
   out_1494317040645604294[22] = 0;
   out_1494317040645604294[23] = 0;
   out_1494317040645604294[24] = 0;
   out_1494317040645604294[25] = 0;
   out_1494317040645604294[26] = 0;
   out_1494317040645604294[27] = 0;
   out_1494317040645604294[28] = 0;
   out_1494317040645604294[29] = 0;
   out_1494317040645604294[30] = 0;
   out_1494317040645604294[31] = 0;
   out_1494317040645604294[32] = 0;
   out_1494317040645604294[33] = 1;
   out_1494317040645604294[34] = 0;
   out_1494317040645604294[35] = 0;
   out_1494317040645604294[36] = 0;
   out_1494317040645604294[37] = 0;
   out_1494317040645604294[38] = 0;
   out_1494317040645604294[39] = 0;
   out_1494317040645604294[40] = 0;
   out_1494317040645604294[41] = 0;
   out_1494317040645604294[42] = 0;
   out_1494317040645604294[43] = 0;
   out_1494317040645604294[44] = 0;
   out_1494317040645604294[45] = 0;
   out_1494317040645604294[46] = 0;
   out_1494317040645604294[47] = 0;
   out_1494317040645604294[48] = 0;
   out_1494317040645604294[49] = 0;
   out_1494317040645604294[50] = 0;
   out_1494317040645604294[51] = 0;
   out_1494317040645604294[52] = 0;
   out_1494317040645604294[53] = 0;
   out_1494317040645604294[54] = 0;
   out_1494317040645604294[55] = 0;
   out_1494317040645604294[56] = 1;
   out_1494317040645604294[57] = 0;
   out_1494317040645604294[58] = 0;
   out_1494317040645604294[59] = 0;
   out_1494317040645604294[60] = 0;
   out_1494317040645604294[61] = 0;
   out_1494317040645604294[62] = 0;
   out_1494317040645604294[63] = 0;
   out_1494317040645604294[64] = 0;
   out_1494317040645604294[65] = 0;
}
void h_33(double *state, double *unused, double *out_1057565139168482429) {
   out_1057565139168482429[0] = state[16];
   out_1057565139168482429[1] = state[17];
   out_1057565139168482429[2] = state[18];
}
void H_33(double *state, double *unused, double *out_7770346456027478629) {
   out_7770346456027478629[0] = 0;
   out_7770346456027478629[1] = 0;
   out_7770346456027478629[2] = 0;
   out_7770346456027478629[3] = 0;
   out_7770346456027478629[4] = 0;
   out_7770346456027478629[5] = 0;
   out_7770346456027478629[6] = 0;
   out_7770346456027478629[7] = 0;
   out_7770346456027478629[8] = 0;
   out_7770346456027478629[9] = 0;
   out_7770346456027478629[10] = 0;
   out_7770346456027478629[11] = 0;
   out_7770346456027478629[12] = 0;
   out_7770346456027478629[13] = 0;
   out_7770346456027478629[14] = 0;
   out_7770346456027478629[15] = 0;
   out_7770346456027478629[16] = 1;
   out_7770346456027478629[17] = 0;
   out_7770346456027478629[18] = 0;
   out_7770346456027478629[19] = 0;
   out_7770346456027478629[20] = 0;
   out_7770346456027478629[21] = 0;
   out_7770346456027478629[22] = 0;
   out_7770346456027478629[23] = 0;
   out_7770346456027478629[24] = 0;
   out_7770346456027478629[25] = 0;
   out_7770346456027478629[26] = 0;
   out_7770346456027478629[27] = 0;
   out_7770346456027478629[28] = 0;
   out_7770346456027478629[29] = 0;
   out_7770346456027478629[30] = 0;
   out_7770346456027478629[31] = 0;
   out_7770346456027478629[32] = 0;
   out_7770346456027478629[33] = 0;
   out_7770346456027478629[34] = 0;
   out_7770346456027478629[35] = 0;
   out_7770346456027478629[36] = 0;
   out_7770346456027478629[37] = 0;
   out_7770346456027478629[38] = 0;
   out_7770346456027478629[39] = 1;
   out_7770346456027478629[40] = 0;
   out_7770346456027478629[41] = 0;
   out_7770346456027478629[42] = 0;
   out_7770346456027478629[43] = 0;
   out_7770346456027478629[44] = 0;
   out_7770346456027478629[45] = 0;
   out_7770346456027478629[46] = 0;
   out_7770346456027478629[47] = 0;
   out_7770346456027478629[48] = 0;
   out_7770346456027478629[49] = 0;
   out_7770346456027478629[50] = 0;
   out_7770346456027478629[51] = 0;
   out_7770346456027478629[52] = 0;
   out_7770346456027478629[53] = 0;
   out_7770346456027478629[54] = 0;
   out_7770346456027478629[55] = 0;
   out_7770346456027478629[56] = 0;
   out_7770346456027478629[57] = 0;
   out_7770346456027478629[58] = 0;
   out_7770346456027478629[59] = 0;
   out_7770346456027478629[60] = 0;
   out_7770346456027478629[61] = 0;
   out_7770346456027478629[62] = 1;
   out_7770346456027478629[63] = 0;
   out_7770346456027478629[64] = 0;
   out_7770346456027478629[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_35(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_35, H_35, NULL, in_z, in_R, in_ea, MAHA_THRESH_35);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_9025523174858268363) {
  H(in_vec, out_9025523174858268363);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_3634450284494703329) {
  err_fun(nom_x, delta_x, out_3634450284494703329);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_3581389455580693311) {
  inv_err_fun(nom_x, true_x, out_3581389455580693311);
}
void live_H_mod_fun(double *state, double *out_6267270226691599381) {
  H_mod_fun(state, out_6267270226691599381);
}
void live_f_fun(double *state, double dt, double *out_1967718795723466617) {
  f_fun(state,  dt, out_1967718795723466617);
}
void live_F_fun(double *state, double dt, double *out_8172511356407623782) {
  F_fun(state,  dt, out_8172511356407623782);
}
void live_h_4(double *state, double *unused, double *out_7710251854892182174) {
  h_4(state, unused, out_7710251854892182174);
}
void live_H_4(double *state, double *unused, double *out_1253127394016013649) {
  H_4(state, unused, out_1253127394016013649);
}
void live_h_9(double *state, double *unused, double *out_5061423323143147862) {
  h_9(state, unused, out_5061423323143147862);
}
void live_H_9(double *state, double *unused, double *out_1494317040645604294) {
  H_9(state, unused, out_1494317040645604294);
}
void live_h_10(double *state, double *unused, double *out_5169839670943215997) {
  h_10(state, unused, out_5169839670943215997);
}
void live_H_10(double *state, double *unused, double *out_8648619985202259612) {
  H_10(state, unused, out_8648619985202259612);
}
void live_h_12(double *state, double *unused, double *out_8725363731226918659) {
  h_12(state, unused, out_8725363731226918659);
}
void live_H_12(double *state, double *unused, double *out_6272583802047975444) {
  H_12(state, unused, out_6272583802047975444);
}
void live_h_35(double *state, double *unused, double *out_1528919473697599495) {
  h_35(state, unused, out_1528919473697599495);
}
void live_H_35(double *state, double *unused, double *out_9018146834372989153) {
  H_35(state, unused, out_9018146834372989153);
}
void live_h_32(double *state, double *unused, double *out_8451539957787534875) {
  h_32(state, unused, out_8451539957787534875);
}
void live_H_32(double *state, double *unused, double *out_401090213716711955) {
  H_32(state, unused, out_401090213716711955);
}
void live_h_13(double *state, double *unused, double *out_6598065104401855607) {
  h_13(state, unused, out_6598065104401855607);
}
void live_H_13(double *state, double *unused, double *out_7875327432599178702) {
  H_13(state, unused, out_7875327432599178702);
}
void live_h_14(double *state, double *unused, double *out_5061423323143147862) {
  h_14(state, unused, out_5061423323143147862);
}
void live_H_14(double *state, double *unused, double *out_1494317040645604294) {
  H_14(state, unused, out_1494317040645604294);
}
void live_h_33(double *state, double *unused, double *out_1057565139168482429) {
  h_33(state, unused, out_1057565139168482429);
}
void live_H_33(double *state, double *unused, double *out_7770346456027478629) {
  H_33(state, unused, out_7770346456027478629);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 35, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 35, live_h_35 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 35, live_H_35 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 35, live_update_35 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_lib_init(live)
